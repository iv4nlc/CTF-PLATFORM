#!/bin/bash

# Clean option
if [ "$1" == "clean" ]; then
    echo "Cleaning up..."
    if [ -f format_string ]; then
        rm format_string
        echo "Removed format_string"
    fi
    if [ -f corrupting_stack ]; then
        rm corrupting_stack
        echo "Removed corrupting_stack"
    fi
    if [ -f ret2win ]; then
        rm ret2win
        echo "Removed ret2win"
    fi
    if [ -f ret2shellcode ]; then
        rm ret2shellcode
        echo "Removed ret2shellcode"
    fi
    if [ -f ret2libc ]; then
        rm ret2libc
        echo "Removed ret2libc"
    fi
    if [ -f jmp_rsp ]; then
        rm jmp_rsp
        echo "Removed jmp_rsp"
    fi
    if [ -f imitating_jmp_rsp ]; then
        rm imitating_jmp_rsp
        echo "Removed imitating_jmp_rsp"
    fi
    if [ -f got_overwrite ]; then
        rm got_overwrite
        echo "Removed got_overwrite"
    fi
    exit 0
fi

# Compile the format_string.c file (VM ASLR can be or not disabled)
if [ -f format_string ]; then
    rm format_string
fi
gcc -o format_string format_string.c

# Compile the corrupting_stack.c file (VM ASLR can be or not disabled)
if [ -f corrupting_stack ]; then
    rm corrupting_stack
fi
gcc -o corrupting_stack corrupting_stack.c -fno-stack-protector -z execstack -no-pie

# Compile the ret2win.c file (VM ASLR can be or not disabled)
if [ -f ret2win ]; then
    rm ret2win
fi
gcc -o ret2win ret2win.c -fno-stack-protector -z execstack -no-pie

# Compile the ret2shellcode.c file (VM ASLR must be disabled)
if [ -f ret2shellcode ]; then
    rm ret2shellcode
fi
gcc -o ret2shellcode ret2shellcode.c -fno-stack-protector -z execstack -no-pie

# Compile the ret2libc.c file (VM ASLR must be disabled)
if [ -f ret2libc ]; then
    rm ret2libc
fi
gcc -o ret2libc ret2libc.c -fno-stack-protector -no-pie

# Compile the jmp_rsp.c file (VM ASLR can be or not disabled) (enabled)
if [ -f jmp_rsp ]; then
    rm jmp_rsp
fi
gcc -o jmp_rsp jmp_rsp.c -fno-stack-protector -z execstack -no-pie

# Compile the imitating_jmp_rsp.c file (VM ASLR can be or not disabled) (enabled)
if [ -f imitating_jmp_rsp ]; then
    rm imitating_jmp_rsp
fi
gcc -o imitating_jmp_rsp imitating_jmp_rsp.c -fno-stack-protector -z execstack -no-pie

# Compile the got_overwrite.c file (VM ASLR can be or not disabled) (enabled)
if [ -f got_overwrite ]; then
    rm got_overwrite
fi
gcc -o got_overwrite got_overwrite.c -fno-stack-protector -no-pie